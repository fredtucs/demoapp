# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created

name: Java CI with Maven

env:
  AZURE_WEBAPP_NAME: demo-app-nttd

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [opened, synchronize, reopened]

jobs:

  # test:
  #   name: Test
  #   runs-on: ubuntu-20.04
  #   steps:
  #   - name: Checking out
  #     uses: actions/checkout@v3
  #     with:        
  #       fetch-depth: 0 # Disabling shallow clone is recommended for improving relevancy of reporting
  #   - name: Set up JDK 11
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '11'
  #       distribution: 'temurin'
  #       server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
  #       settings-path: ${{ github.workspace }} # location for the settings.xml file    
  #   - name: Test App
  #     run: mvn -B -ntp clean test    

  # sonar:
  #   name: SonarCloud
  #   runs-on: ubuntu-20.04
  #   needs: [test]
  #   steps:
  #   - name: Checking out
  #     uses: actions/checkout@v3
  #     with:        
  #       fetch-depth: 0 # Disabling shallow clone is recommended for improving relevancy of reporting
  #   - name: SonarCloud Scan
  #     run: mvn -B -ntp verify -Psonar
  #     env:        
  #       GITHUB_TOKEN: ${{ secrets.REPO_GITHUB_TOKEN }}        
  #       SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
  #       SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}
   
  build:
    name: Build
    runs-on: ubuntu-20.04
    # needs: [sonar]
    steps:
    - name: Checking out
      uses: actions/checkout@v3
      with:        
        fetch-depth: 0 # Disabling shallow clone is recommended for improving relevancy of reporting
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Build with Maven
      run: mvn -B -ntp clean install --file pom.xml -DskipTests      
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: java-app
        path: '${{ github.workspace }}/target/*.jar'	

  deploy:
    name: Deploy to Azure
    runs-on: ubuntu-20.04
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: java-app
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: '*.jar'